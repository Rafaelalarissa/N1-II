Subversion (SVN)
 Introdução:
Controle de versão é a arte de gerenciar mudanças em informações. Para programadores, 
é um paradigma obrigatório a ser seguido para assegurar a saúde do código-fonte,
ainda mais em grandes equipes atuando cada qual em partes distintas de um projeto. 
O Subversion, ou simplesmente SVN, é uma ferramenta de controle de versão muito poderosa que permite,
além do desenvolvimento colaborativo a partir de um repositório único, merge de conteúdo, 
armazenamento de logs e geração de estatísticas diversas.
Atuando como a máquina do tempo do desenvolvedor, ferramentas com o SVN permitem retornar o código a um estado anterior,
facilitando a análise implementações realizadas e a mesclagem de implementações distintas de períodos 
diferentes para a criação de uma única versão.

Boas práticas:

-Toda revisão deve ser comentada para facilitar o entendimento das alterações realizadas.
-O código no trunk deve sempre estar pronto para ser compilado e colocado em produção se necessário. 
-É dever de cada programador assegurar que seus commits não causem a quebra do build. 
-As alterações em um código-fonte devem ser submetidas ao repositório o mais rápido possível. Para tal, é recomendável a 
divisão das implementações em pequenos pacotes compiláveis e funcionais.
-Toda a quebra de build deve ser tratada com máxima prioridade no sentido de sua correção. 
-Caso um build esteja quebrado, não se deve submeter alterações ao repositório até que o build seja novamente compilável. 
Isso assegura que todos os que realizarem updates terão sempre uma versão compilável e funcional oriunda do repositório.
-O projeto no repositório deve conter quaisquer componentes e ferramentas necessárias para o funcionamento da aplicação 
na máquina do desenvolvedor.
-Evitar o envio de alterações próximo do fim do expediente. Caso haja algum problema com o commit realizado, poderá não 
haver tempo para corrigi-lo naquele dia e o build poderá ficar quebrado por um longo período.
-Todo e qualquer backup de versões deve ser mantido no repositório, preferencialmente como uma tag.

Termos e conceitos básicos

Repositório:
É o local aonde estão todos os arquivos do projeto. É armazenado no banco de dados do SVN.
Working Copy:
Uma cópia de trabalho local na qual o desenvolvedor atua. É criada sempre que é feito checkout de algum projeto.
Checkout:
Download de um projeto para a máquina local, de modo que seus arquivos estejam ligados ao SVN. O projeto que será feito
o checkout deve existir no repositório.
Import:
Envio dos arquivos de um novo projeto para o repositório. Após o import, obrigatoriamente um checkout deve ser feito 
para que a working copy seja ligada ao SVN.
Export:
Ato de adquirir um projeto do repositório sem vinculação ao SVN.
Commit:
Ato de envio das modificações realizadas localmente para o servidor SVN.
Update:
Ato de obtenção das atualizações presentes do servidor SVN, atualizando a cópia local
Revision:
Número que identifica cada uma das alterações ou conjunto de alterações realizadas em um repositório. 
Esse número é obtido a partir de uma sequência que é compartilhada por todos os diretórios do repositório.
HEAD:
É a revisão mais recente do repositório

Diretórios especiais:

trunk: armazena a versão funcional mais recente de desenvolvimento.
branches: armazena versões de desenvolvimento paralelo de origem do trunk, porém isoladas deste. Deve ser utilizado  
quando uma implementação traz o risco de afetar a integridade do trunk.
tags: armazena etiquetas para facilitar a localização de revisões. Cada etiqueta possui um nome único que a identifica,
sendo criada como um diretório, sempre através do trunk.
Branch/Tag
Refere-se à geração de branches ou tags a partir de um trunk ou geração de um branch a partir de uma tag ou outro branch.
Merge
Refere-se à junção de revisões entre os diretórios especiais. Sempre deve ser realizada com a working copy apontando 
para o destino do merge.
Switch
Alteração do repositório utilizado por uma working copy. É realizada uma atualização ou junção dos arquivos para 
assegurar que a working copy contenha exatamente o conteúdo do novo repositório mais quaisquer alterações locais.
Relocate
Realocação do endereço de um repositório. Apenas atualiza o endereço, sem realizar nenhum tipo de atualização nos 
arquivos.

